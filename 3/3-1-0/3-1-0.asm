;Воропаева Алина, группа П-402
;Практическая работа №3
;Вариант №3-1-0
;Задание:  Задание в заполнении некоторой фигуры цифрами. Между последовательно печатаемыми цифрами следует делать 
;паузу. Параметр n (1 <= n <= 10 ) вводится с клавиатуры. Заполните треугольник следующего вида высотой n строк 
;цифрами от 1 до 9 (циклически) с последовательно меняющимися цветами сверху вниз по следующему шаблону:
;12345
; 678
;  9

format mz
begin:
	mov ax,cs
	mov ds,ax

	mov	ah,09h			;Функция вывода строки на экран
	mov dx,str1			;Строка с заданием
	int 21h				;Вывод строки приглашения
	
	xor si,si
	xor cx,cx	
	xor dx,dx	
	xor di,di
	mov	bp,10d			;Для дальнейшего умножения на 10 (для перевода в десятичную систему счисления)
	
inputChar:	
	mov ah,08h			;Функция чтения символа с клавиатуры
	int 21h				;Читаем символ; считанный  сохраняется в AL
	cmp al,'0'			;Сравнение введенного символа и символа '0'
	jb inputCharService	;Если код введенного симвjла меньше кода цифры '0' (т.е. служебный символ), то перейти на 
						;inputCharService (для проверки нажатия Enter'а)
	
	cmp al,'9'			;Сравнение введенного символа и символа '9'
	ja inputChar		;Если код введенного симовла больше кода цифры '9' (т.е. не служебный символ и не цифра), то 
						;перейти на inputChar (для повторного чтения с клавиатуры)
	
	;Иначе (если нажатый символ является цифрой)
	mov bl,al			;Сохраним символ в BL
	mov ax,di			;Поместим в AX уже считанную часть числа, хранящуюся в DI
	mul bp				;Умножаем содержимое регистра AX на 10 (для увеличения числа на еще 1 разряд); DX:AX = AX * BP
	
	cmp dx,0			;Сравнение содержимого регистра DX с 0
	jne inputChar		;Если DX <> 0, значит было переполнение (введенное значение больше, чем может 	
						;поместить в одном 16-разрядном регистре (65 535) ), то перейти на inputChar (для 
						;повторного чтения с клавиатуры)
	
	;Иначе (если переполнения не произошло)
	mov dl,bl			;Поместить в младшую часть DX считанный c клавиатуры символ
	
	sub dl,'0'			;Преобразование считанного символа в цифру
	xor dh,dh			;Обнуление старшей части DX (теперь в DX хранится только введенная цифра; нужно для 
						;дальнейшего сложения с AX (в котором хранится уже считанное число))
	
	add dx,ax			;Суммируем введенную с клавиатуры цифру с уже считанной частью числа
	cmp dx,10
	ja inputChar
	
	mov di,dx			;Поместить в DI считанное число
	
	mov dl,bl			;Поместить в DL введенный с клавиатуры символ (нужно для функции вывода 02h прерывания 		
	
	mov	ah,02h			;Функция вывода символа
	int	21h
			
	jmp inputChar		;Перейти на inputChar для чтения с клавиатуры

inputCharService:	
	cmp di,0
	je inputChar
	cmp	al,13			;Проверка: была ли нажатая клавиша Enter'ом
	je	triangleOutputBegin
	
	jmp inputChar 		;Если был нажат не Enter, то продолжить чтение с клавиатуры

;Вывод треугольника
triangleOutputBegin:
	mov ax,0003			;Функция выбора режима
	int 10h				;Выбор режима
	mov si,0			;SI -- будет хранить количество выведенных символов в данной строке

	mov ax,di			;Поместить в AX введенное число (число строк треугольника)
	xor ah,ah			;Обнулить старшую часть AX (т.к. введенное число от 1 до 9 и хранится в AL)
	
	;Вычисление
	mov bl,2			;Поместить в BL 2 (для дальнейшего умножения)
	mul bl				;AX = AL * BL
	
	sub al,1			;Отнимаем от AX 1. Получаем номер позиции последнего символа в первой строке (до которого надо выводить символы)
	mov bx,ax			;Копируем номер позиции последнего символа в первой строке в BX
	
	mov cx,1			;CX -- количество повторений выводимого символа (нужно для функции 09h прерывания int10h)
	xor dx,dx			;DH = 0, DL = 0; номер строки и столбца соответсввенно, откуда надо начать вывод символов 
						;(для функции 02h прерывания int10h)
	
	push '0'			;Помещение в стек символа '0'. Нужно для вывода символов (цифр). Код выводимой цифры 
						;получается путем извлечения символа из стека и прибавления к нему единицы.

;Вывод строки
stringOutputBegin:
	mov ah,02			;Функция установки позиции курсора
	int 10h				;Установка курсора
	
	pop ax				;Извлечение из стека в регистр AX кода последнего напечатанного символа (символ будет 
						;хранится в младшей части регистра AX -- AL)

	cmp al,'9'			;Сравнение последнего напечатанного символа c символом '9'
	je newCharCycle		;Если последний напечатанный символ равен '9', то переход на метку newCharCycle, чтобы 
						;продолжить вывод символов заново с '1'

;Продолжение вывода символов в строке (нужнно для возвращения с метки newCharCycle)
stringOutput2:	
	inc al				;Увеличение кода символа	
	push ax				;Помещение в стек символа, который будет выведен 
	mov ah, 09h 		;Функция для вывода символа с различными атрибутами
	
	push bx				;Поместить в стек BX (запомнить позицию вывода симвлов)
	mov bl,dh			;Помещаем в BL номер текущей строки. В BL хранится атрибут символов, выводимых в данной
						;строке (для функции 09h прерывания int10h)
	add bl,7			;К атрибуту прибавляем 8, потому что от 0 до 8 идут невзрачные атрибуты 	:)
	int 10h				;Выводим символ
	pop bx				;Восстанавливаем значение регистра BX (позиция начала вывода символов в новой стркое)
	
	mov ah,8h			;Ожидание нажатия клавиши (для реализации паузы)
	int 21h
	
	inc dl				;Увеличение номера текущего столбца
	
	cmp dl,bl			;Сравнить номер текущего столбца с номером столбца, до которого надо выводить символы в 
						;данной строке 
	je A2				;Если в текущей строке напечатанно нужное количество символов, то переход на метку A2 (для 
						;перехода на следующую строку)
	jmp stringOutputBegin	;Иначе (если в данной строке еще не напечатано нужное количество символов), 
							;то переход на метку stringOutputBegin (для продолжения вывода символов а данной строке)

;Переход на следующую строку для печати символов	
A2:	
	inc dh				;Увеличение номера строки для установки позиции курсора (для перехода к следующей, строке)
	dec bl				;Умеьшить значение BL, в котором хранится номер столбца до которого необходимо выводить 
						;символы в данной строке
	mov dl,dh			;DL -- столбец, с которого начнется вывод символов в новой строке. Т.к. количество выводимых 
						;цифр уменьшается сверху вниз, то позиция первого выводимого символа в строке равна номеру 
						;данной строки. Т.е. в 1-й строке вывод символов начинается с 1-го столбца, во 2-й со 2-го и 
						;т.д.
	inc si				;Увеличение SI, в котором хранится счётчик уже напечатанных строк 
	
	cmp si,di			;Сравнение количества напечатанных строк с необходимым количеством строк
	je endProg			;Если напечатано нужное количество строк, то перейти на метку endProg (для выхода из 
						;программы)

	jmp stringOutputBegin	;Иначе (если количество напечатанных строк меньше необходимого), то перейти на метку 
							;stringOutputBegin (для продолжения вывода символов)

;Установка выводимого символа в равного '0' (в дальнейшем код символа будет увеличен на 1). Переход на эту мутку осущесвтляется если последний выводимый символ был равен '9'.
newCharCycle:
	mov al,'0'			;Установка символа '0' (потом будет увеличен на 1, т.к. выводимый смимвол должен быть от '0'
						;до '9')
	jmp stringOutput2	;Переход на метку stringOutput2 (для продложения вывода символов)
	
;Выход из программы	
endProg:
	mov ah,8h			;Функция чтения с клавиатуры (для реализации паузы, чтобы программа сразу не закрывалась)
	int 21h			
	
	mov ax,4c00h		;Функция выхода
	int 21h				;Выход


str1	db	'Задание в заполнении некоторой фигуры цифрами. Между последовательно печатаемымицифрами следует делать паузу. Параметр n (1 <= n <= 10 ) вводится с клавиатуры. Заполните треугольник следующего вида высотой n строк цифрами от 1 до 9 (циклически) с последовательно меняющимися цветами сверху вниз',10,13
		db	'Введите N: $'