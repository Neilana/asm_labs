;Воропаева Алина, группа П-402
;Практическая работа №1
;Вариант №1-2-3
;Данное число не превышает 65535. Программа проверяет число: является ли оно квадаратом? Если да, то какого числа.
format mz
;org	100h
begin:	
	mov ax,cs
	mov ds,ax
	mov ah,09h			;Функция вывода строки на экран
	mov dx,str1			;Строка приглашения
	int 21h				;Вывод строки приглашения
	
	xor dx,dx	
	xor di,di			;DI -- введенное число
	mov bp,10			;Для дальнейшего умножения на 10 (для перевода в десятичную систему счисления)

inputChar:	
	mov ah,08h			;Функция чтения символа с клавиатуры
	int 21h				;Читаем символ; считанный  сохраняется в AL
	cmp al,'0'			;Сравнение введенного символа и символа '0'
	jb inputCharService	;Если код введенного симвjла меньше кода цифры '0' (т.е. служебный символ), то перейти на 
						;inputCharService (для проверки нажатия Enter'а)
	
	cmp al,'9'			;Сравнение введенного символа и символа '9'
	ja inputChar		;Если код введенного симовла больше кода цифры '9' (т.е. не служебный символ и не цифра), то 
						;перейти на inputChar (для повторного чтения с клавиатуры)
	
	;Иначе (если нажатый символ является цифрой)
	mov bl,al			;Сохраним символ в BL
	mov ax,di			;Поместим в AX уже считанную часть числа, хранящуюся в DI
	mul bp				;Умножаем содержимое регистра AX на 10 (для увеличения числа на еще 1 разряд); DX:AX = AX * BP
	
	cmp dx,0			;Сравнение содержимого регистра DX с 0
	jne inputChar		;Если DX <> 0, значит было переполнение (введенное значение больше, чем может 	
						;поместить в одном 16-разрядном регистре (65 535) ), то перейти на inputChar (для 
						;повторного чтения с клавиатуры)
	
	;Иначе (если переполнения не произошло)
	mov dl,bl			;Поместить в младшую часть DX считанный c клавиатуры символ
	
	sub dl,'0'			;Преобразование считанного символа в цифру
	xor dh,dh			;Обнуление старшей части DX (теперь в DX хранится только введенная цифра; нужно для 
						;дальнейшего сложения с AX (в котором хранится уже считанное число))
	
	add dx,ax			;Суммируем введенную с клавиатуры цифру с уже считанной частью числа
	jc inputChar  	    ;Если было переполнение (введенное значение больше, чем может поместить 
						;в одном 16-разрядном регистре (65 535) ), то перейти на inputChar (для повторного чтения с 
						;клавиатуры)
	
	mov di,dx			;Поместить в DI считанное число
	
	mov dl,bl			;Поместить в DL введенный с клавиатуры символ (нужно для функции вывода 02h прерывания 		
						;int21h)
	mov ah,02h			;Функция вывода символа
	int 21h				;Вывод считанного символа
	
	jmp inputChar		;Перейти на inputChar для чтения с клавиатуры

inputCharService:	
	cmp di,0			;Если не введена ни одна цифра или введенное число равно 0
	je inputChar		;То продолжить чтение с клавиатуры
	
	cmp al,13			;Если был нажат Enter, то перейти к вычислениям
	je startProg

	jmp inputChar		;Если был нажат не Enter, то продолжить чтение с клавиатуры
	
startProg:
	mov cx,255			;CX -- количество итераций для цикла; также является числом, которое надо возвести в квадрат 
						;и сравнить с веденным числом. 255,потому что если в программу нельзя ввести число больше 
						;65 535, то максимальное число, возведенное в квадрат может быть 255.

;Цикл возведения в квадрат чисел от 1 до 255. Выход из цикла осущесвтляется после нахождения числа, квадрат которого
;равен введенному числу, либо после безрезультатного прохода цикла 255 раз (в случае, если число квадратом не 
;является).
loopStart:	
	xor ax,ax			;Обнуление значения AX; в AX далее будет храниться возведенное в квадрат значение регистра CL
	mov al,cl			;Помещение в младушую часть регистра AX (AL) число, которое будет возведено в квадрат (CL)
	mul cl 				;Возведение в квадрат. AX = AL * CL
	cmp ax,di			;Сравнение текущего числа, возведенного в квадрат и введенного числа (AX и DI соответсвенно)  
	je outputAnswer		;Если числа равны, то перейти на outputAnswer (для вывода найденного чилса)
	loop loopStart		;Если число, возведенное в квадрат, не найдено и значение CX не достигло нуля, то уменьшить 
						;CX и повторить цикл
	jmp endProg			;Т.к. произошёл выход из цикла, т.е. CX = 0 и число, возведенное в квадрат не найдено, то 
						;перейти на метку endProg (для выхода из программы)
	
outputAnswer:
	push cx 			;Помещение в стек результа, что бы потом можно было восстановить
	
	;Переход на новую строку
	mov ah,2h			;Функция вывода символа
	mov dl,13		
	int 21h
	
	mov dl,10		
	int 21h			
	
	;Вывод строки "Answer: "
	mov ah,09h			;Функция вывода строки
	mov dx,str2			;В DX помещаем строку для вывода 'Answer: '
	int 21h
	
	pop ax				;Извлекаем из стека в AX найденный результат
	push -1				;Помещаем с стек значение -1 для созранения признака конца числа

	mov bp,10d			;Для дальнейшего деления на 10 (для перевода в десятичную систему счисления)

keepNumber:	
	xor dx,dx			;Обнуление регистра DX
	div bp				;Деление на 10. DX:AX/BPж в AX -- целое, в DX -- остаток
	push dx				;Поместим остаток от деления в стек (что бы потом цифру можно было извлечь и вывести на экран)
	cmp ax,0			;Проверка: является ли целое от деления нулем (оптимальнее or ax,ax)
	jne keepNumber		;Если да, то достигнут конец числа
	mov ah,2h			;Функция вывода символа

outputNumber:	
	pop dx				;Восстановим цифру из стека (т.к извлекается из стека, то число выводится с первой цифры)
	cmp dx,-1			;Сравнение извлеченного числа с -1					
	je endProg			;Если равно , значит достигнут конец и надо перейти на метку endProg (для выхода из
						;программы){оптимальнее: or dx,dx jl endProg}
	add dl,'0'			;Преобразование извлеченной цифры в символ
	int 21h				;Вывод символа на экран
	jmp outputNumber	;Перейти на метку outputNumber для вывода дальнейших символов

	endProg:    
	mov ah,02h			;Перейдем на новую строчку
	mov dl,13
	int 21h
	
	mov dl,10
	int 21h

	mov ah,09h			;Функция вывода строки на экран
	mov dx,str3			;Строка 'Press any key...'
	int 21h				;Вывод строки
	
	mov ah,8h			;Функция чтения с клавиатуры (для реализации паузы, чтобы программа сразу не закрывалась)
	int 21h
	
	mov ax,4c00h		;Функция выхода
	int 21h				;Выход

str1	db 'Является ли данное число квадратом какого-либо иного числа. Если да, то какого?.',10,13
		db 'Введите число: $'
str2	db 'Ответ: $'
str3	db 'Нажмите любую клавишу...$'